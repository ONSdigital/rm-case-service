info:
  name: ${project.artifactId}
  version: ${project.version}
  origin: ${scm.url}
  commit: ${buildNumber}
  branch: ${scmBranch}
  built: ${timestamp}

# logging config here as a reminder as to how to override logback from cmd line
# ie -Dlogging.level.org.springframework=DEBUG
logging:
  level:
    uk.gov.ons.ctp: DEBUG
    org.springframework: ERROR
  profile: DEV
  useJson: false

management:
  endpoints:
    web:
      exposure:
        include: health,info
  security:
    roles: SUPERUSER
    enabled: true

server:
  port: 8171

spring:
  application:
    name: ONS CaseService
  datasource:
    url: jdbc:postgresql://localhost:5432/ras
    username: postgres
    password: postgres
    driverClassName: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQL94Dialect
    show-sql: false
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: update
      default_schema: casesvc
  sql:
    init:
      mode: always
      continue-on-error: true
  liquibase:
    user: postgres
    password: postgres
    url: jdbc:postgresql://localhost:5432/ras
    liquibase-schema: casesvc
    change-log: classpath:/database/changelog-master.yml
    enabled: false
  main:
    allow-bean-definition-overriding: true
  output:
    ansi:
      enabled: never
  cloud:
    gcp:
      project-id: ras-rm-dev

internet-access-code-svc:
  iac-get-path: /iacs/{iac}
  iac-post-path: /iacs
  iac-put-path: /iacs/{iac}
  connection-config:
    scheme: http
    host: localhost
    port: 8121
    username: admin
    password: secret

    
collection-exercise-svc:
  collection-exercise-path: /collectionexercises/{exerciseId}
  collection-exercise-survey-path: /collectionexercises/survey/{surveyId}
  collection-exercises-path: /collectionexercises
  connection-config:
    scheme: http
    host: localhost
    port: 8145
    username: admin
    password: secret

  # calling the party svc endpoint
party-svc:
  party-by-sample-unit-type-and-id-path: /party-api/v1/parties/type/{sampleUnitType}/id/{partyId}
  connection-config:
    scheme: http
    host: localhost
    port: 8081
    username: admin
    password: secret
    retry-attempts: 1
    retry-pause-milli-seconds: 5000
    connect-timeout-milli-seconds: 5000
    read-timeout-milli-seconds: 5000

  # calling the survey svc endpoints
survey-svc:
  request-survey-path: /surveys/{surveyId}
  connection-config:
    scheme: http
    host: localhost
    port: 8080
    username: admin
    password: secret
    retry-attempts: 5
    retry-pause-milli-seconds: 5000
    connect-timeout-milli-seconds: 5000
    read-timeout-milli-seconds: 5000
  multiple-form-type-supported-survey-ids: "202,203"
  multiple-form-type-supported: "1862,1864,1874"
  survey-id-supported-template: "024,283"

case-distribution:
  retrieval-max: 50
  delay-milli-seconds: 500

redelivery-policy:
  maxRedeliveries: 10
  initialRedeliveryDelay: 1000
  redeliveryDelay: 1000

messaging:
  backoffInitial: 5000
  backoffMultiplier: 3
  backoffMax: 45000
  consumingThreads: 1
  pubMaxAttempts: 3
  conMaxAttempts: 3
  prefetchCount: 10

retries:
  maxAttempts: 3
  backoff: 5000

gcp:
  project: ras-rm-sandbox
  receiptSubscription: ras-rm-receipt
  caseNotificationTopic: "test_topic"
  caseNotificationSubscription: "test_subscription"
  collectionExerciseEventStatusTopic: "test_event_status_topic"
  printFileTopic: "test_notify_letter_topic"
  notifyTopic: "test_notify_email_topic"
  bucket:
    name: ras-rm-print-file-sinhaa
    prefix: ""


