<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
  http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
  http://www.springframework.org/schema/integration/jms
  http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd" >

    <!-- Message listener on ActiveMQ.DLQ in VM memory -->
    <bean id="activeMQListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="destinationName" value="ActiveMQ.DLQ" />
        <property name="maxConcurrentConsumers" value="1" />
        <property name="concurrentConsumers" value="1" />
        <property name="autoStartup" value="true" />
    </bean>

    <!-- Setup Input channel to receive failed messages-->
    <int:channel id="activeMQDLQXml">
        <int:queue capacity="1" />
    </int:channel>

    <!-- Adapter listening on JMS queue to check for failed messages -->
    <int-jms:message-driven-channel-adapter
            id="jmsDLQIn" container="activeMQListenerContainer" channel="activeMQDLQXml"/>

    <bean id="caseReceiptJMSQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="Case.Responses"/>
    </bean>

    <int:channel id="testOutbound" />

    <int-jms:outbound-channel-adapter id="jmsout" channel="testOutbound" destination="caseReceiptJMSQueue"/>

    <!-- ServiceActivator(inputChannel = "caseReceiptTransformedWithHeader")  -->
    <bean id="caseReceiptReceiver" class="uk.gov.ons.ctp.response.casesvc.message.impl.CaseReceiptReceiverImpl"/>
    <int:service-activator input-channel="caseReceiptTransformedWithHeader" ref="caseReceiptReceiver"/>

    <bean id="caseRepo" class="org.mockito.Mockito" factory-method="mock"  >
        <constructor-arg value="uk.gov.ons.ctp.response.casesvc.domain.repository.CaseRepository" />
    </bean>
    <bean id="actionPlanMappingRepo" class="org.mockito.Mockito" factory-method="mock"  >
        <constructor-arg value="uk.gov.ons.ctp.response.casesvc.domain.repository.ActionPlanMappingRepository" />
    </bean>
    <bean id="caseEventRepo" class="org.mockito.Mockito" factory-method="mock"  >
        <constructor-arg value="uk.gov.ons.ctp.response.casesvc.domain.repository.CaseEventRepository" />
    </bean>
    <bean id="caseTypeRepo" class="org.mockito.Mockito" factory-method="mock"  >
        <constructor-arg value="uk.gov.ons.ctp.response.casesvc.domain.repository.CaseTypeRepository" />
    </bean>
    <bean id="categoryRepo" class="org.mockito.Mockito" factory-method="mock"  >
        <constructor-arg value="uk.gov.ons.ctp.response.casesvc.domain.repository.CategoryRepository" />
    </bean>
    <bean id="unlinkedCaseReceiptRepository" class="org.mockito.Mockito" factory-method="mock"  >
        <constructor-arg value="uk.gov.ons.ctp.response.casesvc.domain.repository.UnlinkedCaseReceiptRepository" />
    </bean>
    <bean id="caseSvcStateTransitionManager" class="org.mockito.Mockito" factory-method="mock"  >
        <constructor-arg value="uk.gov.ons.ctp.common.state.StateTransitionManager" />
    </bean>
    <bean id="actionSvcClientService" class="org.mockito.Mockito" factory-method="mock"  >
        <constructor-arg value="uk.gov.ons.ctp.response.casesvc.service.ActionSvcClientService" />
    </bean>
    <bean id="internetAccessCodeSvcClientService" class="org.mockito.Mockito" factory-method="mock"  >
        <constructor-arg value="uk.gov.ons.ctp.response.casesvc.service.InternetAccessCodeSvcClientService" />
    </bean>
    <bean id="notificationPublisher" class="org.mockito.Mockito" factory-method="mock"  >
        <constructor-arg value="uk.gov.ons.ctp.response.casesvc.message.CaseNotificationPublisher" />
    </bean>

    <bean id="caseService" class="org.mockito.Mockito" factory-method="mock"  >
        <constructor-arg value="uk.gov.ons.ctp.response.casesvc.service.impl.CaseServiceImpl" />
    </bean>

    <bean id="unlinkedCaseReceiptService" class="uk.gov.ons.ctp.response.casesvc.service.impl.UnlinkedCaseReceiptServiceImpl">
    </bean>

    <bean id="caseReceiptPublisher" class="org.mockito.Mockito" factory-method="mock"  >
        <constructor-arg value="uk.gov.ons.ctp.response.casesvc.message.CaseReceiptPublisher" />
    </bean>
    <!-- ServiceActivator(inputChannel = "caseReceiptTransformedWithHeader")  -->
    <bean id="caseReceiptProcessErrorReceiver" class="uk.gov.ons.ctp.response.casesvc.message.impl.CaseReceiptProcessErrorReceiverImpl"/>
    <int:service-activator input-channel="caseReceiptProcessErrorFailedMsgOnly" ref="caseReceiptProcessErrorReceiver"/>
</beans>

