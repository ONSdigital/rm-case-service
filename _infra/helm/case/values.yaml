env: minikube
namespace: minikube

image:
  devRepo: eu.gcr.io/ons-rasrmbs-management
  name: eu.gcr.io/ons-rasrmbs-management
  tag: latest
  pullPolicy: Always

database:
  managedPostgres: false
  sqlProxyEnabled: false
  secrets:
    usernameKey: username
    passwordKey: password
    nameKey: db-name
  managedRedis: false

container:
  port: 8080
service:
  port: 8080

resources:
  application:
    requests:
      memory: "500Mi"
      cpu: "100m"
    limits:
      memory: "650Mi"
      cpu: "850m"
  proxy:
    requests:
      memory: "25Mi"
      cpu: "5m"
    limits:
      memory: "64Mi"
      cpu: "100m"

autoscaling: false
scaleAt:
  # These are expressed as a percentage of resources.requests, not resources.limits
  memoryPercentage: 130
  cpuPercentage: 500
replicas: 1
maxReplicas: 1
rollingUpdate:
  maxSurge: 1
  maxUnavailable: 1

report:
  cron: "0 * * * * *"
  enabled: false

tomcat:
  initialSize: 5
  maxActive: 10
  maxIdle: 5
  minIdle: 3

dns:
  enabled: false
  wellKnownPort: 8080

deprecateAction: true

gcp:
  project: ras-rm-sandbox
  receiptSubscription: ras-rm-receipt
  caseNotificationTopic: ras-rm-case-notification-topic-test
  caseNotificationSubscription: ras-rm-case-notification-subscription-topic
  notifyTopic: ras-rm-notify-test
  printFileTopic: print-file
  bucket:
    name: "ras-rm-print-file"
    prefix: ""

caseDistribution:
  retrievalMax: 1000
  delayMilliSeconds: 500

messaging:
  consumingThreads: 10

crons:
  retryEventScheduler:
    name: case-action-event-retry-scheduler
    cron: "0 * * * *"
    target: "retry-event"
